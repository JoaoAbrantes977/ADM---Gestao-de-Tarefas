apiVersion: v1
kind: Pod
metadata:
  name: mysql-user-pod
spec:
  containers:
  - name: mysql-user
    image: mysql:8.0
    imagePullPolicy: Never
    env:
    - name: MYSQL_ALLOW_EMPTY_PASSWORD
      value: "yes"
    - name: MYSQL_DATABASE
      value: adm_user
    ports:
    - containerPort: 3306
    resources:
      limits:
        cpu: "200m"
        memory: "300Mi"
    volumeMounts:
    - name: mysql-user-volume
      mountPath: /docker-entrypoint-initdb.d
  volumes:
  - name: mysql-user-volume
    hostPath:
      path: /D:/microservicos_docker/db_user

apiVersion: v1
kind: Pod
metadata:
  name: mysql-task-pod
spec:
  containers:
  - name: mysql-task
    image: mysql:8.0
    imagePullPolicy: Never
    env:
    - name: MYSQL_ALLOW_EMPTY_PASSWORD
      value: "yes"
    - name: MYSQL_DATABASE
      value: adm_task
    ports:
    - containerPort: 3306
    resources:
      limits:
        cpu: "200m"
        memory: "300Mi"
    volumeMounts:
    - name: mysql-task-volume
      mountPath: /docker-entrypoint-initdb.d
  volumes:
  - name: mysql-task-volume
    hostPath:
      path: /D:/microservicos_docker/db_task

---

apiVersion: v1
kind: Pod
metadata:
  name: container-user-pod
spec:
  containers:
  - name: container-user
    image: microservicos_docker-container_user
    imagePullPolicy: Never
    ports:
    - containerPort: 3000
    env:
    - name: PORT
      value: "3000"
    - name: DB_HOST
      value: mysql_user
    - name: DB_USER
      value: root
    - name: DB_PASSWORD
      value: root
    - name: DB_NAME
      value: adm_user
    resources:
      limits:
        cpu: "500m"
        memory: "500Mi"
    volumeMounts:
    - name: container-user-volume
      mountPath: /app
  volumes:
  - name: container-user-volume
    hostPath:
      path: /D:/microservicos_docker/servicoUser

---

apiVersion: v1
kind: Pod
metadata:
  name: container-task-pod
spec:
  containers:
  - name: container-task
    image: microservicos_docker-container_task
    imagePullPolicy: Never
    ports:
    - containerPort: 3000
    env:
    - name: PORT
      value: "3000"
    - name: DB_HOST
      value: mysql_task
    - name: DB_USER
      value: root
    - name: DB_PASSWORD
      value: root
    - name: DB_NAME
      value: adm_task
    resources:
      limits:
        cpu: "500m"
        memory: "500Mi"
    volumeMounts:
    - name: container-task-volume
      mountPath: /app
  volumes:
  - name: container-task-volume
    hostPath:
      path: /D:/microservicos_docker/servicoTask

---

apiVersion: v1
kind: Pod
metadata:
  name: orchestrator-pod
spec:
  containers:
  - name: orchestrator
    image: microservicos_docker-orchestrator
    imagePullPolicy: Never
    ports:
    - containerPort: 3000
    env:
    - name: PORT
      value: "3000"
    resources:
      limits:
        cpu: "500m"
        memory: "500Mi"
    volumeMounts:
    - name: orchestrator-volume
      mountPath: /app
  volumes:
  - name: orchestrator-volume
    hostPath:
      path: /D:/microservicos_docker/servicoOrquestrador

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-user-service
spec:
  selector:
    app: mysql-user
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-task-service
spec:
  selector:
    app: mysql-task
  ports:
  - protocol: TCP
    port: 3307
    targetPort: 3306

---

apiVersion: v1
kind: Service
metadata:
  name: container-user-service
spec:
  selector:
    app: container-user
  ports:
  - protocol: TCP
    port: 3001
    targetPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: container-task-service
spec:
  selector:
    app: container-task
  ports:
  - protocol: TCP
    port: 3002
    targetPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: orchestrator-service
spec:
  selector:
    app: orchestrator
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
